import time
from django.db.models.signals import post_save, post_delete
from django.dispatch import receiver
from django.core.cache import cache
from .models import Comment

@receiver(post_save, sender=Comment)
def clear_comment_cache(sender, instance, created, **kwargs):
    if created and instance.parent is None: 
        start_time = time.perf_counter()
        try:   
            cache.delete_pattern("comments_page_*")
            print("‚úÖ –°–±—Ä–æ—à–µ–Ω –∫–µ—à –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
        except AttributeError as err:
          
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –∫–µ—à–∞: {err}")
        end_time = time.perf_counter()
        print(f"‚è± –í—Ä–µ–º—è —Å–±—Ä–æ—Å–∞ –∫–µ—à–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {end_time - start_time:.4f} —Å–µ–∫—É–Ω–¥")


@receiver(post_delete, sender=Comment)
def clear_comment_cache_on_delete(sender, instance, **kwargs):
    """
    –û—á–∏—â–∞–µ—Ç –∫–µ—à –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
    """
    if instance.parent is None:
        start_time = time.perf_counter()
        try:
            cache.delete_pattern("comments_page_*")
            print("üóëÔ∏è –°–±—Ä–æ—à–µ–Ω –∫–µ—à –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è)")
        except AttributeError as err:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –∫–µ—à–∞ (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è): {err}")
        end_time = time.perf_counter()
        print(f"‚è± –í—Ä–µ–º—è —Å–±—Ä–æ—Å–∞ –∫–µ—à–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è): {end_time - start_time:.4f} —Å–µ–∫—É–Ω–¥")
